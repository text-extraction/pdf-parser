<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>textextraction</groupId>
  <artifactId>pdf-parser</artifactId>
  <name>${project.artifactId}</name>
  <version>0.1</version>

  <properties>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.build.localRepo>${project.build.directory}/mvn-repo</project.build.localRepo>

    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- 
      The id of the server to use on authenticating against the Github server. This id must
      correspond to a respective <server>-entry in your ~/.m2/settings.xml specifiying the 
      credentials to use on authenticating. 
    -->
    <github.global.server>github</github.global.server>
    <!-- The branch to which the artifacts should be uploaded. -->
    <github.site.branch>refs/heads/mvn-repo</github.site.branch>
    <!-- The commit message to use on committing the artifacts. -->
    <github.site.message>Maven artifacts for ${project.version}</github.site.message>
    <!-- The Github account name owning the repository to which the artifacts should be uploaded -->
    <github.site.repositoryOwner>text-extraction</github.site.repositoryOwner>
    <!-- The name of the repository to which the artifacts should be uploaded. -->
    <github.site.repositoryName>${project.artifactId}</github.site.repositoryName>
  </properties>

  <repositories>
    <repository>
      <id>common</id>
      <url>https://github.com/text-extraction/common/raw/mvn-repo/</url>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
      <groupId>textextraction</groupId>
      <artifactId>common</artifactId>
      <version>0.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.pdfbox</groupId>
      <artifactId>pdfbox</artifactId>
      <version>2.0.21</version>
    </dependency>
    <dependency>
      <groupId>org.apache.pdfbox</groupId>
      <artifactId>fontbox</artifactId>
      <version>2.0.21</version>
    </dependency>
    <dependency>
      <groupId>org.apache.pdfbox</groupId>
      <artifactId>pdfbox-tools</artifactId>
      <version>2.0.21</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>2.13.3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>2.13.3</version>
    </dependency>
  </dependencies>

  <!-- Deploy the artifacts to a tmp staging repository before uploading to the Github repo. -->
  <distributionManagement>
    <repository>
      <id>repo</id>
      <name>Temporary Staging Repository</name>
      <url>file://${project.build.localRepo}</url>
    </repository>
  </distributionManagement>

  <build>
    <!-- Deploy the artifacts to a temp. staging repository before uploading to the Github repo. -->
    <plugins>
      <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>2.8.2</version>
        <configuration>
          <altDeploymentRepository>
            repo::default::file://${project.build.localRepo}
          </altDeploymentRepository>
        </configuration>
      </plugin>

      <!-- Upload the artifacts to the Github repository. -->
      <plugin>
        <groupId>com.github.github</groupId>
        <artifactId>site-maven-plugin</artifactId>
        <version>0.11</version>
        <configuration>
          <branch>${github.site.branch}</branch>
          <outputDirectory>${project.build.localRepo}</outputDirectory>
          <message>${github.site.message}</message>
          <noJekyll>true</noJekyll>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>site</goal>
            </goals>
            <phase>deploy</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
